##Simulation for ShareProcess     
Simulation_StockPrices <- function(PV, Vol, N = 100, Nu = 0, time_lapse = 52, dT=52, Risk_F_i = 0.035){
x <- numeric()
a <- list()
Q <- numeric()
C <- numeric()
P <- numeric()
par(mfrow=c(2,2)) 

for (i in 1:N){ 
    a[[i]] <- ShareProcess_Exponential(PV, Vol, Nu, dT, time_lapse, 0,0,1)
}

for (i in 1:N){
    Q[i] <- do.call(rbind,a[i])[length(do.call(rbind,a[i]))]
}

for (i in 1:N){
    C[i] <- max((Q[i]-PV),0)/(1+ Risk_F_i)
    P[i] <- max((PV-Q[i]), 0)/(1+ Risk_F_i)
}
    
matplot(t(do.call(rbind, a)), type= "l", main = "Stock" ,xlab = "Time", ylab = "Price")
abline(h = mean(do.call(rbind, a)),lwd = 3, col = "blue")
abline(h = mean(do.call(rbind, a)) + sd(do.call(rbind, a)),lwd = 3, col = "red")
abline(h = mean(do.call(rbind, a)) - sd(do.call(rbind, a)),lwd = 3, col = "red")

hist(Q, xlab = "Stock Price", main = "FV Stock Histogram", breaks = 50, freq = FALSE, col = "grey")
lines(density(Q), xlab = "Stock Price", main = "Density", col = "black", lwd = 3)
abline(v = mean(Q),lwd = 3, col = "blue")
abline(v = mean(Q) + sd(Q),lwd = 3, col = "red")
abline(v = mean(Q) - sd(Q),lwd = 3, col = "red")

L <- mean(Q)-(qnorm(0.975)*sd(Q)/sqrt(dT*N))
J <- mean(Q)+(qnorm(0.975)*sd(Q)/sqrt(dT*N))

do.call(rbind, list(c("Expected Value","Call","Put","Standard D.", "Confidence","Interval", "Standard Error"), 
                    c(mean(Q),mean(C),mean(P), sd(Q), L, J, sd(Q)/sqrt(dT*N))))
}
